import numpy as np
import matplotlib.pyplot as plt

## models for which the error went down, check if result is indeed significant according to permutation test


# Define the permutation test function
def permutation_test(base, exog, n_permutations=1000):
    observed_diff = np.mean(np.array(exog) - np.array(base))
    perm_stats = np.zeros(n_permutations)

    for i in range(n_permutations):
        permuted_diff = np.random.permutation(np.array(exog) - np.array(base))
        perm_stats[i] = np.mean(permuted_diff)

    p_value = np.sum(np.abs(perm_stats) >= np.abs(observed_diff)) / n_permutations

    return p_value



# Define the arrays
ROE_ARIMA_GRANGER_base = [0.07933807891514447, 0.03506342363408937, 0.046493164100981824, 0.034336261787219303, 0.03616255933772744]
ROE_ARIMA_GRANGER_exog = [0.0792803229684546, 0.03557290861874095, 0.045430316831595964, 0.083149243603979817, 0.03469277693690144]

EPSR_ARIMA_GRANGER_base = [0.11565164637093277, 0.20038278852480346, 0.21856047126183495, 0.42763336014054326, 0.324013930940076]
EPSR_ARIMA_GRANGER_exog = [0.11454235407762355, 0.20589017618917638, 0.20663581468905728, 0.4287419972818905, 0.3186430846640499]

ROA_ARIMA_COMBINED_base = [0.010364101361291966, 0.06353440723347907, 0.015533073595643546, 0.016109979318122348, 0.038523641171239534]
ROA_ARIMA_COMBINED_exog = [0.010299699272265232, 0.06152685985582297, 0.018498295518404352, 0.018913990620055134, 0.0320151839436742] 

EPS_ARIMA_COMBINED_base = [0.0988720659678884, 0.1517584743292222, 0.06513091160679868, 0.24957174325675005, 0.15154190125827374]
EPS_ARIMA_COMBINED_exog = [0.09850652613035656, 0.13656856155835279, 0.07782210664114902, 0.2469193055263369, 0.14926097506282376] 

ROA_LSTM_CORR_base = [0.026486676, 0.09624364, 0.06656846, 0.03573533, 0.043058656] 
ROA_LSTM_CORR_exog = [0.013878804, 0.07761269, 0.05738073, 0.03869665, 0.043659136]

EPS_LSTM_CORR_base =  [0.2193358, 0.18909812, 0.1544029, 0.6701231, 1.297942] 
EPS_LSTM_CORR_exog = [0.27032706, 0.19091713, 0.12518218, 0.47191352, 0.72536314] 

EPSR_LSTM_CORR_base =  [0.2594126, 0.24040912, 0.51004016, 0.93765134, 0.9829575] 
EPSR_LSTM_CORR_exog = [0.28407383, 0.21060652, 0.5296086, 0.8137928, 0.67617124]

EPS_LSTM_GRANGER_base =  [0.17948037, 0.14697073, 0.14953528, 0.6391906, 1.1565648] 
EPS_LSTM_GRANGER_exog = [0.20232432, 0.11766106, 0.12067059, 0.6743915, 0.43013775]

ROE_LSTM_COMBINED_base = [0.30801117, 0.08198066, 0.07019519, 0.0448696, 0.048924167]
ROE_LSTM_COMBINED_exog = [0.15720913, 0.091088496, 0.07525977, 0.04551453, 0.046005595] 

ROA_LSTM_COMBINED_base =  [0.05809995, 0.090775825, 0.02830622, 0.041529853, 0.04314736] 
ROA_LSTM_COMBINED_exog = [0.01173625, 0.11962162, 0.05064669, 0.035879586, 0.042627946] 

EPS_LSTM_COMBINED_base =  [0.22176856, 0.14271031, 0.15592901, 0.78281057, 1.858566] 
EPS_LSTM_COMBINED_exog = [0.2602321, 0.17126065, 0.1544213, 0.57461774, 1.0082903] 

ROE_LSTM_BASE_base = [0.36046532, 0.082335345, 0.066059195, 0.04614242, 0.05051321] 
ROE_LSTM_BASE_exog = [0.2354673, 0.12735212, 0.066037506, 0.047601815, 0.048813492] 

EPSR_LSTM_BASE_base = [0.256086, 0.31368017, 0.4582157, 1.080562, 0.887255] 
EPSR_LSTM_BASE_exog = [0.14362587, 0.20918381, 0.48622325, 1.0016115, 0.75787055] 

ROA_LSTM_ESG_base = [0.024798062, 0.10386513, 0.03291161, 0.03613915, 0.042916927] 
ROA_LSTM_ESG_exog = [0.012561131, 0.081774354, 0.033784866, 0.03428952, 0.042475563] 

EPSR_LSTM_ESG_base = [0.2570761, 0.23315847, 0.45404473, 0.89771247, 0.87904924] 
EPSR_LSTM_ESG_exog = [0.13948832, 0.21940197, 0.47144032, 1.1629664, 0.71863294]



# List of all array pairs
array_pairs = [
    (ROE_ARIMA_GRANGER_base, ROE_ARIMA_GRANGER_exog),
    (EPSR_ARIMA_GRANGER_base, EPSR_ARIMA_GRANGER_exog),
    (ROA_ARIMA_COMBINED_base, ROA_ARIMA_COMBINED_exog),
    (EPS_ARIMA_COMBINED_base, EPS_ARIMA_COMBINED_exog),
    (ROA_LSTM_CORR_base, ROA_LSTM_CORR_exog),
    (EPS_LSTM_CORR_base, EPS_LSTM_CORR_exog),
    (EPSR_LSTM_CORR_base, EPSR_LSTM_CORR_exog),
    (EPS_LSTM_GRANGER_base, EPS_LSTM_GRANGER_exog),
    (ROE_LSTM_COMBINED_base, ROE_LSTM_COMBINED_exog),
    (ROA_LSTM_COMBINED_base, ROA_LSTM_COMBINED_exog),
    (EPS_LSTM_COMBINED_base, EPS_LSTM_COMBINED_exog),
    (ROE_LSTM_BASE_base, ROE_LSTM_BASE_exog),
    (EPSR_LSTM_BASE_base, EPSR_LSTM_BASE_exog),
    (ROA_LSTM_ESG_base, ROA_LSTM_ESG_exog),
    (EPSR_LSTM_ESG_base, EPSR_LSTM_ESG_exog),
]



# Perform permutation tests
for i, (base, exog) in enumerate(array_pairs):
    p_value = permutation_test(base, exog)
    print(f'Test {i+1} p-value={p_value:.3f}')
    if p_value < 0.05:
        print('Significant difference between models (reject H0)')
    else:
        print('No significant difference between models (fail to reject H0)')
